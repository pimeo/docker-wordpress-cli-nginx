# SPDX-License-Identifier: APACHE-2.0
# Reference: https://github.com/bitnami/containers/tree/main/bitnami/wordpress-nginx

services:
  mariadb:
    container_name: ${COMPOSE_PROJECT_NAME}_mariadb
    image: docker.io/bitnami/mariadb:${MARIADB_VERSION:-latest}
    restart: unless-stopped
    volumes:
      - 'mariadb_data:/bitnami/mariadb'
    environment:
      - ALLOW_EMPTY_PASSWORD=no
    env_file: .env
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - app-network

  wordpress:
    depends_on:
      mariadb:
        condition: service_healthy
      phpmyadmin:
        condition: service_started
    image: wordpress:${WORDPRESS_VERSION:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}_wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - "WORDPRESS_DB_HOST=${MARIADB_HOST}:${MARIADB_PORT}"
      - "WORDPRESS_DB_USER=${MARIADB_USER}"
      - "WORDPRESS_DB_PASSWORD=${MARIADB_PASSWORD}"
      - "WORDPRESS_DB_NAME=${MARIADB_DATABASE}"
    volumes:
      # - wordpress:/var/www/html
      - ${WORDPRESS_DATA_DIR:-./wordpress}:/var/www/html
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
    image: nginx:${NGINX_VERSION:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}_webserver
    restart: unless-stopped
    env_file: .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # - "wordpress:/var/www/html"
      - ${WORDPRESS_DATA_DIR:-./wordpress}:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network

  phpmyadmin:
    depends_on:
      mariadb:
        condition: service_healthy
    image: phpmyadmin/phpmyadmin:${PHPMYADMIN_VERSION:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}_phpmyadmin
    restart: always
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      PMA_HOST: mariadb
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-password}
    networks:
      - app-network
  
  certbot:
    depends_on:
      - webserver
    image: certbot/certbot:${CERTBOT_VERSION:-latest}
    container_name: ${COMPOSE_PROJECT_NAME}_certbot
    env_file: .env
    volumes:
      - certbot-etc:/etc/letsencrypt
      # - wordpress:/var/www/html
      - ${WORDPRESS_DATA_DIR:-./wordpress}:/var/www/html
    # with staging mode and support www subdomain
    # command: certonly --webroot --webroot-path=/var/www/html --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --staging -d ${WORDPRESS_HOST_DOMAIN} -d www.${WORDPRESS_HOST_DOMAIN}
    # with staging flag (test mode)
    # command: certonly --webroot --webroot-path=/var/www/html --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --staging -d ${WORDPRESS_HOST_DOMAIN}
    # without staging flag (production mode)
    command: certonly --webroot --webroot-path=/var/www/html --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --force-renewal -d ${WORDPRESS_HOST_DOMAIN}

  # Command line interface to wordpress
  wpcli:
    # image: wordpress:${WORDPRESS_CLI_VERSION:-cli}
    build: 
      context: ./wpcli/
      args:
        - "WORDPRESS_CLI_VERSION=${WORDPRESS_CLI_VERSION}"
    container_name: ${COMPOSE_PROJECT_NAME}_wpcli
    volumes:
      - ${WORDPRESS_DATA_DIR:-./wordpress}:/var/www/html
    working_dir: /var/www/html
    networks:
      - app-network

# Check availability of essential services
  healthcheck:
    # image: wordpress:${WORDPRESS_CLI_VERSION:-cli}
    build: 
      context: ./wpcli/
      args:
        - "WORDPRESS_CLI_VERSION=${WORDPRESS_CLI_VERSION}"
    container_name: ${COMPOSE_PROJECT_NAME}_healthcheck
    command: sh -c "/wait"
    environment:
      - WAIT_HOSTS=mariadb:3306, wordpress:80
      # - WAIT_HOSTS=mariadb:3306, wordpress:443
      - WAIT_BEFORE_HOSTS=${WAIT_BEFORE_HOSTS:-30}
      - WAIT_AFTER_HOSTS=${WAIT_AFTER_HOSTS:-15}
      - WAIT_HOSTS_TIMEOUT=${WAIT_HOSTS_TIMEOUT:-300}
      - WAIT_SLEEP_INTERVAL=${WAIT_SLEEP_INTERVAL:-30}
      - WAIT_HOST_CONNECT_TIMEOUT=${WAIT_HOST_CONNECT_TIMEOUT:-30}
    networks:
      - app-network

volumes:
  mariadb_data:
  # wordpress:
  certbot-etc:

networks:
  app-network:
    driver: bridge
